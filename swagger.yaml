swagger: '2.0'
info:
  version: '1.0'
  title: "ProgIng2"
  description: API docs of Software Engineering project by Davide Bulbarelli, Davide Piva, Lorenzo Framba, Marco Luzzara, Morgan Malavasi
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
    
host: proging2.herokuapp.com
basePath: /v1/
schemes:
- https
consumes:
- application/json
produces:
- application/json
# tags are used for organizing operations
tags:
- name: Users
  description: Everything about user
- name: Exams
  description: Everything about exam
- name: Tasks
  description: Everything about task
- name: Answers
  description: Everything about answer
- name: Groups
  description: Everything about groups
  
securityDefinitions:
   ApiKeyAuth:
    type: apiKey
    in: header
    name: X-API-Key
    
paths:
  /Groups:
    get:
      security:
        - ApiKeyAuth: []
      tags:
      - Groups
      summary: List all groups that belongs to the user calling the api
      description: |
        List all groups for which the user is the owner
      produces:
      - application/json
      responses:
        200:
          description: matching groupId
          schema:
            type: array
            items:
              type: integer
        401:
          description: ApiKey not valid 
        default:
          description: Bad Request
    post:
      security:
        - ApiKeyAuth: []
      tags:
      - Groups
      summary: Create a new group
      description: This feature helps to create a new group
      parameters:
      - in: body
        name: group
        description: the group to create
        schema: 
          $ref: "#/definitions/Group"
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        201:
          description: group created
          schema:
            $ref: '#/definitions/User'
        401:
          description: ApiKey not valid 
        409:
          description: an existing item already exists
        default:
          description: Bad Request
          
          
  /Groups/{groupId}:  
    get:
      security:
        - ApiKeyAuth: []
      tags:
      - Groups
      summary: Get an existing group info
      description: get an existing group info
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: item modified 
        401:
          description: ApiKey not valid  
        409:
          description: an existing item already exists
        default:
          description: Bad Request
    put:
      security:
        - ApiKeyAuth: []
      tags:
      - Groups
      summary: Modify an existing group
      description: Modify an existing group
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: group
        required: true
        schema:
           $ref: '#/definitions/Group'
      responses:
        200:
          description: item modified 
        401:
          description: ApiKey not valid   
        409:
          description: an existing item already exists
        default:
          description: Bad Request
          
    delete:
      security:
        - ApiKeyAuth: []
      tags:
      - Groups
      summary: delete a group
      operationId: DeletebyToken
      description: 
        delete a group
      produces:
      - application/json
      responses:
        200:
          description: group deleted 
        401:
          description: ApiKey not valid
        default:
          description: Bad Request
    parameters:
      - in: path
        name: groupId
        description: ID of the user
        required: true
        type: integer
          
   
  /Users:
    post:
      tags:
      - Users
      summary: Create a new User
      description: This feature helps to create a new user
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        201:
          description: item created
          schema:
            $ref: '#/definitions/User'
        409:
          description: an existing item already exists
        default:
          description: Bad Request

  
  /Users/{userId}:     
    get:
      security:
        - ApiKeyAuth: []
      tags:
      - Users
      summary: List all the users info by UserID
      description: |
        By passing the appropriate ID, the system returns the right user and all its informations.
      produces:
      - application/json
      responses:
        200:
          description: user data
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        401:
          description: ApiKey not valid 
        default:
          description: Bad Request

    put:
      security:
        - ApiKeyAuth: []
      tags:
      - Users
      summary: Edit an existing User
      description: edit an existing user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        required: true
        schema:
           $ref: '#/definitions/User'
      responses:
        200:
          description: item modified 
        401:
          description: ApiKey not valid
        409:
          description: an existing item already exists
        default:
          description: Bad Request
    parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
        type: integer

  /Token:
    post:
      tags:
      - Users
      summary: Logs in into the account
      description: log in into your own account
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Login 
        description: Login into your account
        schema:
          type: object
          required:
            - username
            - password
          properties:
            username:
              type: string
            password:
              type: string
      responses:
        200:
          description: Logged in successfully 
          schema:
            type: string
        default:
          description: Bad Request

          
  /Token/{tokenId}:     
    delete:
      security:
        - ApiKeyAuth: []
      tags:
      - Users
      summary: logs out from the website
      description: log out from the current account
      produces:
      - application/json
      parameters:
      - name: tokenId
        in: path
        description: token
        required: true
        type: integer
      responses:
        200:
          description: logged out correctly 
        401:
          description: ApiKey not valid
        default:
          description: Bad Request

  /Exams:
    get:
      security:
        - ApiKeyAuth: []
      tags:
        - Exams
      summary: List all examId
      responses:
        200:
          description: Return list of examId
          schema:
            type: array
            items:
              type: integer
        401:
          description: ApiKey not valid
        default:
          description: Bad Request
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Exams
      summary: create an exam
      parameters:
        - in: body
          name : exam
          description: the exam to create
          schema:
            $ref: "#/definitions/Exam"
      responses:
        200:
          description: OK
        401:
          description: ApiKey not valid
        default:
          description: Bad Request
                    
  /exams/{examId}:
    get:
      security:
        - ApiKeyAuth: []
      tags:
        - Exams
      summary: Returns an exam by ID.
      responses:
        200:
          description: Return the exam with specified ID
          schema:
            $ref: '#/definitions/Exam'
          examples:
            application/json:
                id : 3
                name : Analisi
                duration : 45m
                deadline : 1541688393563
                dateSubmission : 1541688789590
                start : 1541688789056
        400:
          description: bad input parameter
        401:
          description: ApiKey not valid
          
          
    put:
      security:
        - ApiKeyAuth: []
      tags:
      - "Exams"
      summary: "Modify an existing exam"
      description: "Modify the specified exam"
      operationId: "modifyExam"
      produces: 
      - application/json
      parameters:
      - in: body
        name: exam
        required: true
        schema:
            $ref: "#/definitions/Exam"
      responses:
        '200':
          description: Exam modified
        '400':
          description: bad input parameter
        '401':
          description: ApiKey not valid
        409:
          description: an existing exam already exists
        
    delete:
      security:
        - ApiKeyAuth: []
      tags:
      - "Exams"
      summary: "Delete an existing exam"
      description: "Delete the specified exam"
      operationId: "deleteExam"
      produces: 
      - application/json
      responses:
        '200':
          description: Exam deleted
        '400':
          description: bad input parameter
        '401':
          description: ApiKey not valid
    parameters:
      - name: examId
        in: path
        description: ID of the exam
        required: true
        type: integer
          
  /tasks:
    get:
      security:
        - ApiKeyAuth: []
      tags:
        - Tasks
      summary: return a list of tasks
      description: given an examId and/or a userId return a list of tasks associated 
      parameters: 
        - in: query
          name: exam
          type: integer
          description: The ID of the Exam
        - in: query
          name: user
          type: integer
          description: The Id of the User
      responses:
        '200':
          description: Return list of Tasks
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
        '400':
          description: bad input parameter
        '401':
          description: not authorizexe
          
    
          
          
    post:
      security:
        - ApiKeyAuth: []
      tags: 
        - Tasks
      summary: create a new Task
      description: create a new Task
      parameters:
      - in: body
        name: task
        required: true
        schema:
          $ref: "#/definitions/Task"
      responses:
        '200':
          description: Task has been correctly created
        '401':
          description: apiKey not valid
        400:
          description: Bad request
      
  /tasks/{taskId}:
    put:
      security:
        - ApiKeyAuth: []
      tags:
        - Tasks
      summary: Change the body of an existing task from ID
      description: Modify the specified task
      operationId: modifyTask
      produces:
        - application/json
      parameters:
      - in: body
        name: task
        required: true
        schema:
            $ref: "#/definitions/Task"  
      responses:
        '200':
          description: Task modified
        '400':
          description: bad input parameter
        '401':
          description: ApiKey not valid
        409:
          description: an existing task already exists
          
    delete:
      security:
        - ApiKeyAuth: []
      tags:
        - Tasks
      summary: Delete an existing task
      description: Delete the specified task
      operationId: deleteTask
      produces:
        - application/json
      responses:
        '200':
          description: task deleted
        '400':
          description: Impossible delete the existing task
        '401':
          description: ApiKey not valid
    parameters:
    - name: taskId
      in: path
      description: ID of the Task
      required: true
      type: integer
      format: int64
    
  /answers:
  
    put:
      security:
        - ApiKeyAuth: []
      tags:
      - Answers
      summary: Edit an existing Answer
      description: This feature helps to edit an existing answer
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: answer
        required: true
        schema:
            $ref: "#/definitions/Exam"
      responses:
        200:
          description: answer modified 
        400:
          description: invalid input, object invalid
        409:
          description: an existing answer already exists
        401:
          description: ApiKey not valid   
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Answers
      summary: send answer for a task
      description: send the answer to the specified task assigned to a user
      parameters:
        - in: body
          name: answer
          required: true
          schema:
            type: string
      responses:
        '200': 
          description: the answer has been correctly received
        '401': 
          description: apikey not valid
        '400':
          description: Bad request
    delete:
      security:
        - ApiKeyAuth: []
      tags:
        - Answers
      summary: delete an answer
      description: delete the answer of the specified task assigned to a user
      responses:
        '200': 
          description: the answer has been correctly deleted
        '401': 
          description: apikey not valid
        '400':
          description: Bad request
    parameters:
    - name: exam
      in: query
      description: Exam Id
      type: integer
      required: true
    - name: task
      in: query
      description: Task Id
      type: integer
      required: true
    - name: user
      in: query
      description: User Id
      type: integer
      required: true   
      
definitions:
  User:
    type: object
    required:
    - name
    - lastname
    - username
    - email
    - password
    properties:
      name:
        type: string
        example: Lorenzo 
      lastname:
        type: string
        example: Framba
      username:
        type: string
        example: montresoruccio
      email:
        type: string
        example: lorenzoframba@gmail.com
      password:
        type: string
        example: oMammaMiaoMammaMia
        
  Group:
    title: Group
    type: object
    properties:
      id:
        type: integer
      owner:
        type: integer
      members:
        type: integer
      name:
        type: string
    required:   
      - id
      - owner
      - members
      - name
  Exam:
    title: Exam
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      duration:
        type: integer
      deadline:
        type: string
      startDate:
        type: string
      tasks :
        type: array
        items:
          type: integer
      groupId:
        type: integer
      countTask:
        type: integer
    required:  
      - id
      - name
      - duration
      - deadline
      - startDate
      - tasks[]
      - groupId
      - countTask
      
  Task:
    title: Task
    type: object
    properties:
      id:
        type: integer
      body:
        type: string
      opzioni_multiselezione: 
        type: integer
        items:
          type: string
      punteggio:
        type: integer
      isPeerPreview:
        type: boolean
      categoria:
        type: string
    
    required:  
      - id
      - body
      - opzioni_multiselezione[]
      - punteggio 
      - isPeerReview
      - categoria